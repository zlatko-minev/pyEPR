# PRELIM NOTES:
#  Some of the packages we use arent in the stanrd conda channel, so try:
#      conda config --add channels conda-forge
# Can also try
#      conda build . --channel conda-forge

{% set data = load_setup_py_data() %}

package:
  name: pyepr
  version: 0.8.01

build:
  number: 4
  script: python setup.py install --single-version-externally-managed --record=record.txt

# https://github.com/python-packaging-tutorial/python-packaging-tutorial/blob/master/conda_build_recipes/02_local_source/meta.yaml
source:
  path: .
#   url: https://github.com/zlatko-minev/pyEPR.git
#   path_url: ../

# extra:
#   channels:
#     - conda-forge

# Packages required to run the package. 
#  These are the dependencies that are installed automatically whenever the package is installed.
#  Package names should follow the package match specifications.
requirements:
  # host:
  #   - python
  #   - pip
  build: 
    - python 
  run:
    - python
    - ipython
    - numpy>=1.15.0
    - pandas>=1.0.1
    - matplotlib>=3.1.0
    - scipy>=1.3.0
    - sympy>=1.3
    # - pint
    # - qutip
    - ipython>=7.0.0
    - seaborn>=0.10.0
    # - metadict
    # - pip:
      # works for regular pip packages
      # - metadict
    # WARNING: metadict, pint, and qutip failed conda

# test:
  # imports:
    # pyEPR

about:
  home: {{ data.get('url') }}
  license: {{ data.get('license') }}
  license_file: LICENSE
  summary: {{ data.get('description') }}
  description: >
    pyEPR is an open source, BSD-licensed library providing high-efficiency,
    easy-to-use analysis functions and automation for the design of quantum
    chips based on superconducting quantum circuits, both distributed and lumped.
    pyEPR interfaces the classical distributed microwave analysis with that of 
    quantum structures and Hamiltonians. It is chiefly based on the energy participation 
    ratio approach; however, it has since v0.4 extended to cover a broad range of
    design approaches. pyEPR stradels the analysis from Maxwell’s to Schrodinger’s
    equations, and converts the solutions of distributed microwve (typically eignmode
    simulations) to a fully diagonalized spectrum of the energy levels, couplings,
    and key parameters of a many-body quantum Hamiltonian.
  doc_url: https://pyepr-docs.readthedocs.io/en/latest/
  dev_url: https://github.com/zlatko-minev/pyEPR

# import sys
# sys.path.pop(1)
# import pyEPR
